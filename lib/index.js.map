{"version":3,"sources":["../index.js"],"names":["EventEmitter","require","semver","os","IS_OSX","test","process","platform","IS_WIN","PLATFORM_SHORT","PLATFORM_FULL","arch","YAML","fs","path","http","https","url","crypto","rimraf","axios","interceptors","response","use","data","error","Promise","reject","request","param","method","params","rm","p","resolve","AutoUpdater","autoDownload","feedURL","currentVersion","nw","App","manifest","version","updateInfo","release","updateFile","emit","Error","parse","files","find","item","console","log","gt","downloadURL","encodeURIComponent","filepath","tmpdir","existsSync","getMD5","md5","toLowerCase","total","size","loaded","server","protocol","get","res","on","chunk","length","pipe","createWriteStream","e","quitAndInstall","restartNow","StartSetup","exec","child","timeout","detached","stream","createReadStream","fsHash","createHash","d","update","digest","module","exports"],"mappings":"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","sourcesContent":["const EventEmitter = require('events'),\r\n  semver = require('semver'),\r\n  os = require('os')\r\n\r\nconst IS_OSX = /^darwin/.test(process.platform)\r\nconst IS_WIN = /^win/.test(process.platform)\r\nconst PLATFORM_SHORT = (IS_WIN ? 'win' : (IS_OSX ? 'mac' : 'linux'))\r\nconst PLATFORM_FULL = PLATFORM_SHORT + (process.arch === 'ia32' ? '32' : '64')\r\n\r\nconst YAML = require('yamljs')\r\nconst fs = require('fs')\r\nconst path = require('path')\r\nconst http = require('http')\r\nconst https = require('https')\r\nconst url = require('url')\r\nconst crypto = require('crypto')\r\nconst rimraf = require('rimraf')\r\nconst axios = require('axios')\r\n\r\naxios.interceptors.response.use((response) => {\r\n  return response.data\r\n}, (error) => {\r\n  return Promise.reject(error)\r\n})\r\n\r\nfunction request (url, param = {}) {\r\n  return axios.request({\r\n    url: url,\r\n    method: 'get',\r\n    params: param\r\n  })\r\n}\r\n\r\nconst rm = (p) => {\r\n  return new Promise((resolve, reject) => {\r\n    rimraf(p, () => {\r\n      resolve()\r\n    })\r\n  })\r\n}\r\n\r\nclass AutoUpdater extends EventEmitter {\r\n  constructor () {\r\n    super()\r\n    this.autoDownload = false\r\n    this.feedURL = ''\r\n    this.currentVersion = nw.App.manifest.version\r\n    this.updateInfo = {}\r\n    this.release = ''\r\n    this.updateFile = ''\r\n  }\r\n\r\n  setFeedURL (url) {\r\n    this.feedURL = url\r\n  }\r\n\r\n  async checkForUpdates () {\r\n    this.emit('checking-for-update')\r\n    if (!this.feedURL) return this.emit('error', new Error('请设置feedURL'))\r\n    try {\r\n      let updateInfo = await request(this.feedURL + '/latest.yml')\r\n      this.updateInfo = YAML.parse(updateInfo)\r\n      this.release = this.updateInfo.files.find(item => item.platform === PLATFORM_FULL)\r\n      console.log(this.updateInfo.version)\r\n      if (semver.gt(this.updateInfo.version, this.currentVersion) && this.release) {\r\n        this.emit('update-available', this.updateInfo)\r\n      } else {\r\n        this.emit('update-not-available', this.updateInfo)\r\n      }\r\n    } catch (e) {\r\n      this.emit('error', e)\r\n    }\r\n  }\r\n\r\n  async downloadUpdate () {\r\n    if (!this.release) {\r\n      throw new Error(`没有新版本`)\r\n    }\r\n    let downloadURL = this.feedURL + '/' + encodeURIComponent(this.release.url)\r\n    const filepath = path.resolve(os.tmpdir(), this.release.url)\r\n    if (fs.existsSync(filepath)) {\r\n      let md5 = await getMD5(filepath)\r\n      if (md5 === this.release.md5.toLowerCase()) {\r\n        this.emit('download-progress', {\r\n          total: this.release.size,\r\n          loaded: this.release.size\r\n        })\r\n        this.emit('update-downloaded')\r\n        this.updateFile = filepath\r\n        return\r\n      }\r\n      await rm(filepath)\r\n    }\r\n    const server = url.parse(downloadURL).protocol === 'https:' ? https : http\r\n    let total = 0\r\n    server.get(downloadURL, res => {\r\n      res.on('data', chunk => {\r\n        total += chunk.length\r\n        this.emit('download-progress', {\r\n          total: this.release.size,\r\n          loaded: total\r\n        })\r\n      })\r\n      res.pipe(fs.createWriteStream(filepath))\r\n      res.on('end', () => {\r\n        this.emit('update-downloaded')\r\n        this.updateFile = filepath\r\n      })\r\n      res.on('error', e => this.emit('error', e))\r\n    })\r\n  }\r\n\r\n  install () {\r\n    this.quitAndInstall(false)\r\n  }\r\n\r\n  async quitAndInstall (restartNow = true) {\r\n    await StartSetup(this.updateFile)\r\n    // nw.App.quit()\r\n  }\r\n}\r\n\r\nfunction StartSetup (updateFile) {\r\n  return new Promise((resolve, reject) => {\r\n    const {exec} = require('child_process')\r\n    const child = exec(`start \"\" \"${updateFile}\" /verysilent /suppressmsgboxes /norestart`, {\r\n      timeout: 4000,\r\n      detached: true\r\n    })\r\n    child.on('error', (e) => {\r\n      reject(e)\r\n    })\r\n    // child.unref()\r\n    // setTimeout(resolve, 1000)\r\n  })\r\n}\r\n\r\n\r\nfunction getMD5 (filepath) {\r\n  return new Promise((resolve, reject) => {\r\n    let stream = fs.createReadStream(filepath)\r\n    let fsHash = crypto.createHash('md5')\r\n    stream.on('data', function (d) {\r\n      fsHash.update(d)\r\n    })\r\n    stream.on('end', function () {\r\n      let md5 = fsHash.digest('hex')\r\n      resolve(md5)\r\n    })\r\n  })\r\n}\r\n\r\nmodule.exports = new AutoUpdater()\r\n"],"file":"index.js"}